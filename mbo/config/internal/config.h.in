// SPDX-FileCopyrightText: Copyright (c) The helly25/mbo authors (helly25.com)
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef MBO_CONFIG_CONFIG_GEN_H_
#define MBO_CONFIG_CONFIG_GEN_H_

// IWYU pragma: private, include "mbo/config/config.h"
// IWYU pragma: friend "mbo/config/config.h"

#include <cstddef>

namespace mbo::config {

// The maximum unroll capacity for `LimitedOrdered` based containers: `LimitedMap` and `LimitedSet`.
// Beyond unrolling 32 comparison steps, unrolling has deminishing returns for any architecture.
// The acceptable range is [4..32].
//
// For Apple M2-Max and AMD Epyc 7000 CPU, 24 appeared to be a good compromise in micro benchmarks.
//
// For complex code inlining + unrolling might become problematic for larger values.
//
// This is controlled by the custom Bazel flag `--//mbo/config:limited_ordered_max_unroll_capacity`.
// When the library is built as a dependency (e.g. as `com_helly25_mbo`), then the flag becomes
// `--@com_helly25_mbo//mbo/config:limited_ordered_max_unroll_capacity`.
static constexpr std::size_t kUnrollMaxCapacityDefault = 16;

// Configuration that controls whether container requirement violations result in throwing a
// `std::runtime_error` or crashing using `ABSL_LOG_IF` (the latter being the default).
//
// When exceptions are used then the affected functions cannot be declared `noexcept`.
//
// This is controlled by custom Bazel `--//mbo/config:require_throws`.
// When the library is built as a dependency (e.g. as `com_helly25_mbo`), then the flag becomes
// `--@com_helly25_mbo//mbo/config:require_throws` (defaults to `False` / `0`).
static constexpr bool kRequireThrows = false;

}  // namespace mbo::config

#endif  // MBO_CONFIG_CONFIG_GEN_H_
