# SPDX-FileCopyrightText: Copyright (c) The helly25 authors (helly25.com)
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@com_helly25_bashtest//bashtest:bashtest.bzl", "bashtest")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

package(default_visibility = ["//visibility:private"])

cc_library(
    name = "artefact_cc",
    srcs = ["artefact.cc"],
    hdrs = ["artefact.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":file_cc",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/time",
    ],
)

cc_library(
    name = "file_cc",
    srcs = ["file.cc"],
    hdrs = ["file.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
    ],
)

cc_test(
    name = "file_test",
    size = "small",
    srcs = ["file_test.cc"],
    deps = [
        "file_cc",
        "//mbo/testing:status_cc",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "glob_cc",
    srcs = ["glob.cc"],
    hdrs = ["glob.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//mbo/status:status_macros_cc",
        "//mbo/strings:split_cc",
        "//mbo/types:extend_cc",
        "//mbo/types:stringify_cc",
        "@com_google_absl//absl/algorithm",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_googlesource_code_re2//:re2",
    ],
)

cc_test(
    name = "glob_test",
    size = "small",
    srcs = ["glob_test.cc"],
    deps = [
        ":glob_cc",
        "//mbo/status:status_macros_cc",
        "//mbo/testing:status_cc",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_googlesource_code_re2//:re2",
    ],
)

cc_binary(
    name = "glob",
    srcs = ["glob_main.cc"],
    deps = [
        ":glob_cc",
        "//mbo/status:status_cc",
        "//mbo/strings:numbers_cc",
        "//mbo/types:extend_cc",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/flags:usage",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

bashtest(
    name = "glob_sh_test",
    srcs = ["glob_sh_test.sh"],
    data = [":glob"] + glob(["testdata/glob_sh_test/**"]),
)
