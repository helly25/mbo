# SPDX-FileCopyrightText: Copyright (c) The helly25/mbo authors (helly25.com)
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//mbo/diff:diff.bzl", "diff_test")
load("//mbo/diff/tests:diff_test_test.bzl", "diff_test_test")

package(default_visibility = ["//visibility:private"])

bzl_library(
    name = "diff_test_test_bzl",
    srcs = ["diff_test_test.bzl"],
    deps = [
        "//mbo/diff:diff_bzl",
        "@bazel_skylib//lib:shell",
    ],
    visibility = ["//visibility:private"],
)

diff_test(
    name = "diff_equal_test",
    file_old = "abc.txt",
    file_new = "abc.txt",
)

diff_test_test(
    name = "abc_axc_diff_test",
    expected_diff = "abc_axc.diff.txt",
    file_old = "abc.txt",
    file_new = "axc.txt",
)

diff_test(
    name = "diff_ignore_matching_lines_test",
    file_old = "abc.txt",
    file_new = "axc.txt",
    ignore_matching_lines = "[bx]",
)

diff_test(
    name = "abc_comments_equal_test",
    file_old = "abc.txt",
    file_new = "abc_comments.txt",
    strip_comments = '#',
)

diff_test_test(
    name = "abc_axc_comments_diff_test",
    expected_diff = "abc_axc_comments.diff.txt",
    file_old = "abc.txt",
    file_new = "axc_comments.txt",
)

diff_test_test(
    name = "abc_axc_comments_stripped_diff_test",
    expected_diff = "abc_axc_comments_stripped.diff.txt",
    file_old = "abc.txt",
    file_new = "axc_comments.txt",
    strip_comments = "#",
)

diff_test(
    name = "abc_ignore_case_diff_test",
    file_old = "abc.txt",
    file_new = "abc_caps.txt",
    ignore_case = True,
)

diff_test_test(
    name = "abc_caps_diff_test",
    expected_diff = "abc_caps.diff.txt",
    file_old = "abc.txt",
    file_new = "abc_caps.txt",
)

diff_test_test(
    name = "abc_whitespace_diff_test",
    expected_diff = "abc_whitespace.diff.txt",
    file_old = "abc.txt",
    file_new = "abc_whitespace.txt",
)

diff_test(
    name = "abc_ignore_all_space_diff_test",
    file_old = "abc.txt",
    file_new = "abc_no_whitespace.txt",
    ignore_all_space = True,
)

diff_test(
    name = "abc_ignore_consecutive_space_diff_test",
    file_old = "abc.txt",
    file_new = "abc_whitespace.txt",
    ignore_consecutive_space = True,
)

diff_test_test(
    # The 'c c' is not the same as 'cc' (from `abc_no_whitespace`) if `ignore_consecutive_space` is
    # used as opposed to ignore_all_space. The above case `abc_ignore_consecutive_space_diff_test`
    # works becasue `c c` and `c  c` are the same as the latter with consecutive spaces removed is
    # the same as the former.
    name = "abc_ignore_all_vs_consecutive_space_diff_test",
    expected_diff = "abc_all_vs_consecutive_space.diff.txt",
    file_old = "abc.txt",
    file_new = "abc_no_whitespace.txt",
    ignore_consecutive_space = True,
)

diff_test_test(
    name = "abc_ignore_space_change_diff_test",
    expected_diff = "abc_ignore_space_change.diff.txt",
    file_old = "abc.txt",
    file_new = "abc_whitespace.txt",
    ignore_space_change = True,
)

diff_test(
    name = "numbers_ignore_blank_lines_diff_test",
    file_old = "numbers.txt",
    file_new = "numbers_blanks.txt",
    ignore_blank_lines = True,
)

diff_test_test(
    name = "numbers_blanks_diff_test",
    expected_diff = "numbers_blanks.diff.txt",
    file_old = "numbers.txt",
    file_new = "numbers_blanks.txt",
)

diff_test_test(
    name = "numbers_blnanks_plus_diff_test",
    expected_diff = "numbers_blanks_plus.diff.txt",
    file_old = "numbers.txt",
    file_new = "numbers_blanks_plus.txt",
    ignore_blank_lines = True,
)
