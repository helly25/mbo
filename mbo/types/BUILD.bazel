# SPDX-FileCopyrightText: Copyright (c) The helly25/mbo authors (helly25.com)
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:private"])

cc_library(
    name = "cases_cc",
    hdrs = ["cases.h"],
    visibility = ["//visibility:public"],
    deps = ["//mbo/types/internal:cases_cc"],
)

cc_test(
    name = "cases_test",
    size = "small",
    srcs = ["cases_test.cc"],
    deps = [
        ":cases_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "compare_cc",
    hdrs = ["compare.h"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "extend_cc",
    srcs = ["extender.h"],
    hdrs = ["extend.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":tstring_cc",
        ":tuple_cc",
        "//mbo/types/internal:extend_cc",
        "//mbo/types/internal:struct_names_cc",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "extend_test",
    size = "small",
    srcs = ["extend_test.cc"],
    deps = [
        ":extend_cc",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/log:absl_log",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "extend_stringify_test",
    size = "small",
    srcs = ["extend_stringify_test.cc"],
    copts = [
        "-ftemplate-depth=5000",
    ],
    deps = [
        ":extend_cc",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/log:absl_log",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "no_destruct_cc",
    hdrs = ["no_destruct.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "no_destruct_test",
    srcs = ["no_destruct_test.cc"],
    deps = [
        ":extend_cc",
        ":no_destruct_cc",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "ref_wrap_cc",
    hdrs = ["ref_wrap.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "ref_wrap_test",
    srcs = ["ref_wrap_test.cc"],
    deps = [
        ":ref_wrap_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "template_search_cc",
    hdrs = ["template_search.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "template_search_test",
    srcs = ["template_search_test.cc"],
    deps = [
        ":template_search_cc",
        ":traits_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "traits_cc",
    hdrs = ["traits.h"],
    visibility = ["//visibility:public"],
    deps = ["//mbo/types/internal:traits_cc"],
)

cc_test(
    name = "traits_test",
    size = "small",
    srcs = ["traits_test.cc"],
    deps = [
        ":traits_cc",
        "//mbo/types/internal:test_types_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "tstring_cc",
    srcs = ["tstring.h"],
    hdrs = ["tstring.h"],
    deps = ["//mbo/hash:hash_cc"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "tstring_test",
    size = "small",
    srcs = ["tstring_test.cc"],
    deps = [
        ":tstring_cc",
        "//mbo/hash:hash_cc",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "tuple_cc",
    hdrs = ["tuple.h"],
    visibility = ["//visibility:public"],
    deps = [":traits_cc"],
)

cc_test(
    name = "tuple_test",
    size = "small",
    srcs = ["tuple_test.cc"],
    deps = [
        ":tuple_cc",
        "//mbo/types/internal:test_types_cc",
        "@com_google_googletest//:gtest_main",
    ],
)
