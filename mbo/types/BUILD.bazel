# SPDX-FileCopyrightText: Copyright (c) The helly25 authors (helly25.com)
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(default_visibility = ["//visibility:private"])

cc_library(
    name = "cases_cc",
    hdrs = ["cases.h"],
    visibility = ["//visibility:public"],
    deps = ["//mbo/types/internal:cases_cc"],
)

cc_test(
    name = "cases_test",
    size = "small",
    srcs = ["cases_test.cc"],
    deps = [
        ":cases_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "compare_cc",
    hdrs = ["compare.h"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "extender_cc",
    hdrs = ["extender.h"],
    visibility = [":__subpackages__"],
    deps = [
        ":stringify_cc",
        ":tstring_cc",
        ":tuple_extras_cc",
        "//mbo/types/internal:extender_cc",
        "//mbo/types/internal:struct_names_cc",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "extend_cc",
    hdrs = ["extend.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":extender_cc",
        ":stringify_cc",
        ":tstring_cc",
        ":tuple_extras_cc",
        "//mbo/types/internal:extend_cc",
        "//mbo/types/internal:struct_names_cc",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "extend_test",
    size = "small",
    srcs = ["extend_test.cc"],
    deps = [
        ":extend_cc",
        ":extender_cc",
        ":traits_cc",
        ":tuple_extras_cc",
        "//mbo/types/internal:extend_cc",
        "//mbo/types/internal:traits_cc",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/log:absl_log",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "extend_stringify_test",
    size = "small",
    srcs = ["extend_stringify_test.cc"],
    copts = [
        "-ftemplate-depth=5000",
    ],
    deps = [
        ":extend_cc",
        ":extender_cc",
        ":stringify_cc",
        "//mbo/container:limited_vector_cc",
        "//mbo/types/internal:struct_names_cc",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/log:absl_log",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "no_destruct_cc",
    hdrs = ["no_destruct.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "no_destruct_test",
    srcs = ["no_destruct_test.cc"],
    deps = [
        ":extend_cc",
        ":extender_cc",
        ":no_destruct_cc",
        ":traits_cc",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "container_proxy_cc",
    hdrs = ["container_proxy.h"],
    deps = [
        "@com_google_absl//absl/hash",
    ],
)

cc_library(
    name = "opaque_cc",
    hdrs = ["opaque.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":container_proxy_cc",
        "@com_google_absl//absl/hash",
    ],
)

cc_test(
    name = "opaque_test",
    srcs = ["opaque_test.cc"],
    deps = [
        ":opaque_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "optional_data_or_ref_cc",
    hdrs = ["optional_data_or_ref.h"],
    deps = [
        ":optional_ref_cc",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "optional_data_or_ref_test",
    srcs = ["optional_data_or_ref_test.cc"],
    deps = [
        ":optional_data_or_ref_cc",
        "//mbo/testing:matchers_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "optional_ref_cc",
    hdrs = ["optional_ref.h"],
    deps = [
        "//mbo/config:require_cc",
        "//mbo/log:demangle_cc",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "optional_ref_test",
    srcs = ["optional_ref_test.cc"],
    deps = [
        ":optional_ref_cc",
        "//mbo/testing:matchers_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "ref_wrap_cc",
    hdrs = ["ref_wrap.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "ref_wrap_test",
    srcs = ["ref_wrap_test.cc"],
    deps = [
        ":ref_wrap_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "required_cc",
    hdrs = ["required.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "required_test",
    srcs = ["required_test.cc"],
    deps = [
        ":required_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "stringify_cc",
    srcs = ["stringify.cc"],
    hdrs = ["stringify.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":optional_data_or_ref_cc",
        ":optional_ref_cc",
        ":traits_cc",
        ":tuple_extras_cc",
        "//mbo/types/internal:extender_cc",
        "//mbo/types/internal:struct_names_cc",
        "@com_google_absl//absl/cleanup",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/log:absl_log",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "stringify_test",
    size = "small",
    srcs = ["stringify_test.cc"],
    copts = [
        "-ftemplate-depth=5000",
    ],
    deps = [
        ":stringify_cc",
        ":traits_cc",
        ":tuple_extras_cc",
        "//mbo/container:limited_vector_cc",
        "//mbo/testing:matchers_cc",
        "//mbo/types/internal:struct_names_cc",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/log:absl_log",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "stringify_ostream_cc",
    hdrs = ["stringify_ostream.h"],
    deps = [
        ":stringify_cc",
    ],
)

cc_test(
    name = "stringify_ostream_test",
    size = "small",
    srcs = ["stringify_ostream_test.cc"],
    deps = [
        ":extender_cc",
        ":stringify_ostream_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "template_search_cc",
    hdrs = ["template_search.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "template_search_test",
    srcs = ["template_search_test.cc"],
    deps = [
        ":template_search_cc",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "traits_cc",
    hdrs = ["traits.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":tuple_cc",
        "//mbo/types/internal:traits_cc",
    ],
)

cc_test(
    name = "traits_test",
    size = "small",
    srcs = ["traits_test.cc"],
    deps = [
        ":traits_cc",
        "//mbo/types/internal:test_types_cc",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "tstring_cc",
    srcs = ["tstring.h"],
    hdrs = ["tstring.h"],
    visibility = ["//visibility:public"],
    deps = ["//mbo/hash:hash_cc"],
)

cc_test(
    name = "tstring_test",
    size = "small",
    srcs = ["tstring_test.cc"],
    deps = [
        ":tstring_cc",
        "//mbo/hash:hash_cc",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "tuple_cc",
    hdrs = ["tuple.h"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "tuple_extras_cc",
    hdrs = ["tuple_extras.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":traits_cc",
        "//mbo/types/internal:traits_cc",
    ],
)

cc_test(
    name = "tuple_extras_test",
    size = "small",
    srcs = ["tuple_extras_test.cc"],
    deps = [
        ":tuple_cc",
        ":tuple_extras_cc",
        "//mbo/types/internal:test_types_cc",
        "//mbo/types/internal:traits_cc",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)
