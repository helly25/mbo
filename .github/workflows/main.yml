name: Test
on: [push]
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: pre-commit/action@v3.0.1
      - uses: pre-commit-ci/lite-action@v1.0.2
        if: always()

  test-ubuntu-gcc-opt:
    needs: pre-commit
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [gcc]
        gcc_version: [11, 12, 13]
        bazel_mode: [opt]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.gcc_version }}
          platform: x64
      - uses: actions/cache@v4
        with:
            path: "~/.cache/bazel"
            key: ${{ matrix.os }}-${{ matrix.compiler }}${ matrix.gcc_version }}${{ matrix.bazel_mode }}-${{github.ref}}-${{ github.sha }}
            restore-keys: |
                ${{ matrix.os }}-${{ matrix.compiler }}${ matrix.gcc_version }}${{ matrix.bazel_mode }}-${{github.ref}}-
                ${{ matrix.os }}-${{ matrix.compiler }}${ matrix.gcc_version }}${{ matrix.bazel_mode }}-refs/heads/main-
                ${{ matrix.os }}-${{ matrix.compiler }}${ matrix.gcc_version }}${{ matrix.bazel_mode }}-

      - name: Test
        run: |
          # Use WORKSPACE
          export CC=/usr/local/bin/gcc
          export CXX=/usr/local/bin/g++
          ${CC} --version
          bazel test --noenable_bzlmod --enable_workspace -c ${{ matrix.bazel_mode }} //...

  test:
    needs: [pre-commit, test-ubuntu-gcc-opt]
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [clang]
        llvm_version: [19.1.6, 17.0.4]
        bazel_config: [asan, opt, fastbuild]
        exclude:
          - os: macos-latest
            bazel_config: asan
          - os: macos-latest
            bazel_config: fastbuild
          - llvm_version: 17.0.4
            bazel_config: asan
          - llvm_version: 17.0.4
            bazel_config: fastbuild

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v3
      - uses: actions/cache@v4
        with:
            path: "~/.cache/bazel"
            key: ${{ matrix.os }}-${{ matrix.compiler }}${{ matrix.llvm_version }}${{ matrix.bazel_config }}-${{github.ref}}-${{ github.sha }}
            restore-keys: |
                ${{ matrix.os }}-${{ matrix.compiler }}${{ matrix.llvm_version }}${{ matrix.bazel_config }}-${{github.ref}}-
                ${{ matrix.os }}-${{ matrix.compiler }}${{ matrix.llvm_version }}${{ matrix.bazel_config }}-refs/heads/main-
                ${{ matrix.os }}-${{ matrix.compiler }}${{ matrix.llvm_version }}${{ matrix.bazel_config }}-

      - name: Test
        run: |
          bazel test --enable_bzlmod --noenable_workspace --config=clang --config=asan -c dbg //...
          if [ "${{ matrix.bazel_config}}" == "asan" ]; then
            BAZEL_MODE="-c dbg"
            BAZEL_CONFIG="--config=asan"
          fi
          if [ "${{ matrix.bazel_config}}" == "opt" ]; then
            BAZEL_MODE="-c opt"
            BAZEL_CONFIG=
          fi
          if [ "${{ matrix.bazel_config}}" == "fastbuild" ]; then
            BAZEL_MODE="-c fastbuild"
            BAZEL_CONFIG=
          fi
          if [ "${{ matrix.llvm_version}}" != "19.1.6" ]; then
            CONTROL_FILE=bazelmod/llvm.MODULE.bazel
            sed -e 's,llvm_version = ".*",llvm_version = "${{ matrix.llvm_version }}",g' "${CONTROL_FILE}" > "${CONTROL_FILE}.new"
            mv "${CONTROL_FILE}.new" "${CONTROL_FILE}"
          fi
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            CACHE_ROOT=~/.cache/bazel
            OUTPUT_USE_ROOT="--output_user_root=${CACHE_ROOT}"
            REPOSITORY_CACHE="--repository_cache=${CACHE_ROOT}/repo-cache"
          else
            OUTPUT_USE_ROOT=
            REPOSITORY_CACHE=
          fi
          bazel ${OUTPUT_USE_ROOT} test --enable_bzlmod --noenable_workspace ${REPOSITORY_CACHE} --config=clang ${BAZEL_MODE} ${BAZEL_CONFIG} //...
